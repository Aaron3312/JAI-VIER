{
	"swagger": "2.0",
	"info": {
		"description": "Simple REST APIs for My task React application. The backend implements these APIs.",
		"version": "1.0.0",
		"title": "My task React app",
		"contact": {
			"email": "jean.de.lavarene@oracle.com"
		},
		"license": {
			"name": "The Universal Permissive License (UPL), Version 1.0",
			"url": "https://oss.oracle.com/licenses/upl/"
		}
	},
	"host": "di2eyonlz5s7kmuektcddaw5zq.apigateway.eu-frankfurt-1.oci.customer-oci.com",
	"basePath": "/",
	"tags": [
		{
			"name": "tasklist",
			"description": "Everything about your task list",
			"externalDocs": {
				"description": "Find out more",
				"url": "http://swagger.io"
			}
		}
	],
	"schemes": ["https"],
	"paths": {
		"/tasklist": {
			"get": {
				"tags": ["tasklist"],
				"summary": "Returns current list of task items",
				"description": "",
				"operationId": "getItems",
				"produces": ["application/json"],
				"responses": {
					"200": {
						"description": "successful operation",
						"schema": {
							"$ref": "#/definitions/AllItems"
						}
					}
				}
			},
			"post": {
				"tags": ["tasklist"],
				"summary": "Add a new item to the tasklist",
				"description": "",
				"operationId": "addItem",
				"consumes": ["application/json"],
				"produces": ["application/json"],
				"parameters": [
					{
						"in": "body",
						"name": "body",
						"description": "task item object that needs to be added to the list",
						"required": true,
						"schema": {
							"$ref": "#/definitions/NewItem"
						}
					}
				],
				"responses": {
					"201": {
						"description": "Success"
					},
					"405": {
						"description": "Invalid input"
					}
				}
			}
		},
		"/tasklist/{itemId}": {
			"get": {
				"tags": ["tasklist"],
				"summary": "Find task item by ID",
				"description": "Returns a single task item",
				"operationId": "gettaskById",
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "itemId",
						"in": "path",
						"description": "ID of task item to return",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "successful operation",
						"schema": {
							"$ref": "#/definitions/Item"
						}
					},
					"400": {
						"description": "Invalid ID supplied"
					},
					"404": {
						"description": "Item not found"
					}
				}
			},
			"put": {
				"tags": ["tasklist"],
				"summary": "Updates an existing item",
				"description": "",
				"operationId": "updateItem",
				"consumes": ["application/json"],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "itemId",
						"in": "path",
						"description": "Item id to update",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"in": "body",
						"name": "body",
						"description": "Pet object that needs to be added to the store",
						"required": true,
						"schema": {
							"$ref": "#/definitions/UpdateItem"
						}
					}
				],
				"responses": {
					"400": {
						"description": "Invalid ID supplied"
					},
					"404": {
						"description": "Item not found"
					},
					"405": {
						"description": "Validation exception"
					}
				}
			},
			"delete": {
				"tags": ["tasklist"],
				"summary": "Deletes an item from the list",
				"description": "",
				"operationId": "deleteItem",
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "itemId",
						"in": "path",
						"description": "Item id to delete",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"204": {
						"description": "Success"
					},
					"400": {
						"description": "Invalid ID supplied"
					},
					"404": {
						"description": "Item not found"
					}
				}
			}
		}
	},
	"definitions": {
		"AllItems": {
			"type": "array",
			"items": {
				"$ref": "#/definitions/Item"
			}
		},
		"NewItem": {
			"type": "object",
			"properties": {
				"description": {
					"type": "string"
				}
			}
		},
		"UpdateItem": {
			"type": "object",
			"properties": {
				"description": {
					"type": "string"
				},
				"done": {
					"type": "boolean"
				}
			}
		},
		"Item": {
			"type": "object",
			"properties": {
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"description": {
					"type": "string"
				},
				"createdAt": {
					"type": "string",
					"format": "date-time"
				},
				"done": {
					"type": "boolean"
				}
			}
		}
	}
}
